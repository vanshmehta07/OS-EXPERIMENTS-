#include <stdio.h>
#include <stdlib.h>

#define MAX 200

void SCAN(int arr[], int head, int direction, int size) {
    int seek_sequence[MAX], distance, seek_count = 0, cur_track;
    int start = 0, end = size - 1;

    // Sort the request array
    for (int i = 0; i < size - 1; i++) {
        for (int j = 0; j < size - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }

    // Find the position of the head
    for (int i = 0; i < size; i++) {
        if (head < arr[i]) {
            start = i;
            break;
        }
    }

    // Move towards the end
    if (direction == 1) {
        for (int i = start; i < size; i++) {
            cur_track = arr[i];
            distance = abs(cur_track - head);
            seek_count += distance;
            head = cur_track;
            seek_sequence[i] = cur_track;
        }
        // Move to the end of the disk
        seek_count += abs(MAX - head);
        head = MAX;

        // Move towards the beginning
        for (int i = size - 1; i >= start; i--) {
            cur_track = arr[i];
            distance = abs(cur_track - head);
            seek_count += distance;
            head = cur_track;
            seek_sequence[size + (size - 1 - i)] = cur_track;
        }
    } 
    // Move towards the beginning
    else {
        for (int i = start - 1; i >= 0; i--) {
            cur_track = arr[i];
            distance = abs(cur_track - head);
            seek_count += distance;
            head = cur_track;
            seek_sequence[i] = cur_track;
        }
        // Move to the beginning of the disk
        seek_count += abs(0 - head);
        head = 0;

        // Move towards the end
        for (int i = 0; i < start; i++) {
            cur_track = arr[i];
            distance = abs(cur_track - head);
            seek_count += distance;
            head = cur_track;
            seek_sequence[size + i] = cur_track;
        }
    }

    printf("Total seek time: %d\n", seek_count);
    printf("Seek Sequence: ");
    for (int i = 0; i < size * 2; i++) {
        printf("%d ", seek_sequence[i]);
    }
    printf("\n");
}

int main() {
    int arr[] = { 98, 183, 37, 122, 14, 124, 65, 67 };
    int head = 53;
    int direction = 1; // 1 for right, 0 for left
    int size = sizeof(arr) / sizeof(arr[0]);

    SCAN(arr, head, direction, size);
    return 0;
}
